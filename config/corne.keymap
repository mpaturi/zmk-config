/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        shiftenter: shiftenter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp ENTER>, <&macro_press>;

            label = "SHIFTENTER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt ESCAPE TAB  &kp Q  &kp W  &kp E  &kp R          &kp T         &kp Y      &kp U        &kp I      &kp O    &kp P      &mt PRINTSCREEN C_MUTE
&kp LCTRL       &kp A  &kp S  &kp D  &kp F          &kp G         &kp H      &kp J        &kp K      &kp L    &kp SLASH  &kp RIGHT_WIN
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V          &kp B         &kp N      &kp M        &kp COMMA  &kp DOT  &kp SQT    &kp LEFT_CONTROL
                              &mo 1  &kp BACKSPACE  &kp DELETE    &kp ENTER  &lt 4 SPACE  &mo 2
            >;
        };

        numandfunc {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp F1                        &kp F2                &kp F3             &kp F4               &kp F5                &kp F6                     &kp F7               &kp F8           &kp F9                       &kp F10                   &kp F11
&trans      &mt LS(EXCLAMATION) NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4  &mt LS(PERCENT) N5    &mt CARET NUMBER_6         &mt AMPERSAND N7     &mt ASTERISK N8  &mt LS(LEFT_PARENTHESIS) N9  &mt RIGHT_PARENTHESIS N0  &kp F12
&trans      &mt TILDE GRAVE               &trans                &kp ASTERISK       &mt UNDER MINUS      &mt PLUS EQUAL        &mt PIPE NON_US_BACKSLASH  &mt COLON SEMICOLON  &kp LESS_THAN    &kp GREATER_THAN             &trans                    &trans
                                                                &mo 1              &trans               &trans                &trans                     &trans               &mo 2
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &trans           &trans       &trans    &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET    &kp LEFT_PARENTHESIS       &kp RIGHT_PARENTHESIS  &mt MINUS UNDER  &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET   &kp C_VOLUME_UP
&trans      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR                   &kp PERCENT                      &kp CARET                  &kp AMPERSAND          &kp ASTERISK     &mt SEMI COLON               &mt SLASH QUESTION              &kp C_VOL_DN
&trans      &mt TILDE GRAVE  &trans       &trans    &trans                       &trans                           &mt PIPE NON_US_BACKSLASH  &mt COLON SEMICOLON    &kp LESS_THAN    &kp GREATER_THAN             &mt DOUBLE_QUOTES SINGLE_QUOTE  &trans
                                          &mo 1     &trans                       &trans                           &trans                     &trans                 &mo 2
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR    &bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans        &trans        &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp PG_UP        &trans    &trans          &kp UP    &trans           &trans   &trans
&trans  &trans  &trans  &trans  &trans  &kp PAGE_DOWN    &kp HOME  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT_ARROW  &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &trans    &trans          &trans    &trans           &trans   &trans
                        &trans  &trans  &trans           &trans    &mo 4           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Bluetooth {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
